import{i as o,s as d,y as r}from"./ab6369d8.js";import"./7dfbabb8.js";import"./476e03c8.js";var g=Object.defineProperty,l=(a,e,t)=>e in a?g(a,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):a[e]=t,n=(a,e,t)=>(l(a,typeof e!="symbol"?e+"":e,t),t);class i extends d{constructor(){super(),this.badges=[],this.getSearchResults().then(e=>{this.badges=e}),this.badgeCount="Badges (0)"}async getSearchResults(e=""){const t=`/api/badgeRoster?search=${e}`;return await fetch(t).then(s=>s.ok?s.json():[]).then(s=>s)}async handleSearchEvent(e){const t=e.detail.value;this.badges=await this.getSearchResults(t)}updated(){this.badgeCount="Badges ("+this.badges.length+")"}render(){return r` <search-bar @value-changed="${this.handleSearchEvent}"></search-bar> <div class="bottom-overlay-text">${this.badgeCount}</div> <div class="wrapper"> ${this.badges.map(e=>r` <div class="item"> <badge-element badgeTitle="${e.badgeTitle}" badgeIcon="${e.badgeIcon}" badgeIconColor="${e.badgeIconColor}" badgeDescription="${e.badgeDescription}"></badge-element> </div> `)} </div> `}}n(i,"properties",{badges:{type:Array},badgeTitle:{type:String},badgeCount:{attribute:"badge-count",type:String}}),n(i,"styles",o`.bottom-overlay-text{color:#000;font-family:Calibri,Candara,Segoe,Segoe UI,Optima,Arial,sans-serif;font-size:28px;font-weight:lighter;text-align:left;margin-top:10px;margin-left:30px}`),customElements.define("badge-list",i);
