import{i as d,s as n,y as r}from"./bde14aa8.js";import"./3c90a0a2.js";import"./c949afcb.js";var o=Object.defineProperty,g=(a,e,t)=>e in a?o(a,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):a[e]=t,i=(a,e,t)=>(g(a,typeof e!="symbol"?e+"":e,t),t);class s extends n{constructor(){super(),this.badges=[],this.badgeTitle="Badge title poggers",this.getSearchResults().then(e=>{this.players=e,this.updateBadges()})}async updateBadges(){fetch("../api/badgeRoster.js").then(e=>e.ok?e.json():[]).then(e=>{this.badges=e}),console.log(data)}async getSearchResults(e=""){return await fetch("/api/badgeRoster?search=${value}").then(t=>t.ok?t.json():[]).then(t=>t)}async handleSearchEvent(e){const t=e.detail.value;this.badges=await this.getSearchResults(t)}render(){return r` <div class="wrapper"> ${this.badges.map(e=>r` <div class="item"> <badge-element badgeTitle="${e.badgeTitle}" badgeIcon="${e.badgeIcon}" badgeIconColor="${e.badgeIconColor}" badgeDescription="${e.badgeDescription}"></badge-element> </div> `)} </div> `}}i(s,"properties",{badges:{type:Array},badgeName:{type:String}}),i(s,"styles",d``),customElements.define("badge-list",s);
