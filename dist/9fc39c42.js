import{i as l,s as n,y as s}from"./bde14aa8.js";import"./6d985576.js";import"./c949afcb.js";var d=Object.defineProperty,g=(a,e,t)=>e in a?d(a,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):a[e]=t,o=(a,e,t)=>(g(a,typeof e!="symbol"?e+"":e,t),t);class i extends n{constructor(){super(),this.overlayBadgeText="Badges >",this.badges=[],this.badgeTitle="Default badge title",this.getSearchResults().then(e=>{this.players=e})}async getSearchResults(e=""){const t=`/api/badgeRoster?search=${e}`;return await fetch(t).then(r=>r.ok?r.json():[]).then(r=>r)}async handleSearchEvent(e){const t=e.detail.value;this.badges=await this.getSearchResults(t)}render(){return s` <search-bar @value-changed="${this.handleSearchEvent}"></search-bar> <div class="bottom-overlay-text">${this.overlayBadgeText}</div> <div class="wrapper"> ${this.badges.map(e=>s` <div class="item"> <badge-element badgeTitle="${e.badgeTitle}" badgeIcon="${e.badgeIcon}" badgeIconColor="${e.badgeIconColor}" badgeDescription="${e.badgeDescription}"></badge-element> </div> `)} </div> `}}o(i,"properties",{badges:{type:Array},badgeTitle:{type:String}}),o(i,"styles",l`.bottom-overlay-text{color:#000;font-family:Calibri,Candara,Segoe,Segoe UI,Optima,Arial,sans-serif;font-size:28px;font-weight:lighter;text-align:left;margin-top:10px;margin-left:30px}`),customElements.define("badge-list",i);
